//===================================================
//
// IAR EMBEDDED WORKBENCH TUTORIAL
// Macro package for CSPY debugger to simulate 
// Fibonacci data input, including setting an 
// immediate breakpoint and defining a simulated
// interrupt.
//
// Copyright (C) 1996-2009 IAR Systems AB.
//
// $Revision: 5151 $
//
//===================================================

__var _fileHandle;
__var _interruptID;
__var _breakID;

execUserSetup()
{
  __message "execUserSetup() called\n";

  // Call the simulation setup
  SimulationSetup ();
}


execUserReset()
{
  __message "execUserReset() called\n";

  if( _fileHandle )
  {
    __resetFile( _fileHandle );
  }
}


execUserExit()
{
  __message "execUserExit() called\n";

  // Call the Simulation shutdown
  SimulationShutdown();
}


SimulationSetup()
{
  // Open the text file for ASCII reading
  // Put in the appropriate path to the InputData.txt file
  _fileHandle = __openFile( "$TOOLKIT_DIR$\\tutor\\InputData.txt", "r" );
  if( !_fileHandle )
  {
    __message "could not open file" ;
  }
  
  _interruptID = __orderInterrupt( "USART0RX_VECTOR", 4000, 2000, 0, 1, 0, 100 );
  if( -1 == _interruptID )
  {
    __message "ERROR: failed to order interrupt";
  }

  // Set up the immediate breakpoint
  _breakID = __setSimBreak( "U0RXBUF", "R", "Access()" );
 
}


Access()
{
  __message "Access() called\n";

  // In this tutorial we read the fib values from a file
  __var _fibValue;
  if( 0 == __readFile( _fileHandle, &_fibValue ) )
  {
    U0RXBUF = _fibValue;
  }
  else
  {
    __message "error reading value from file";
  }

  __message "U0RXBUF = 0x", _fibValue:%X,"\n";
}


SimulationShutdown()
{
  __cancelInterrupt( _interruptID );

  __clearBreak( _breakID );

  __closeFile( _fileHandle );
}

